-- MySQL Script generated by MySQL Workbench
-- Mon Feb 11 15:11:26 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema NetflixDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `NetflixDB` ;

-- -----------------------------------------------------
-- Schema NetflixDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NetflixDB` DEFAULT CHARACTER SET utf8 ;
USE `NetflixDB` ;

-- -----------------------------------------------------
-- Table `NetflixDB`.`LANGUAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`LANGUAGE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`LANGUAGE` (
  `language_id` INT NOT NULL,
  `language_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`language_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`POSITION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`POSITION` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`POSITION` (
  `position_id` INT NOT NULL,
  `position_desc` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`position_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`ACCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`ACCOUNT` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`ACCOUNT` (
  `user_id` INT NOT NULL,
  `position_id` INT NOT NULL,
  `password` VARCHAR(75) NOT NULL,
  `firstname` VARCHAR(100) NOT NULL,
  `lastname` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `location` VARCHAR(100) NOT NULL,
  `rate` INT NOT NULL,
  `portfolio` VARCHAR(150) NOT NULL,
  `isactive` TINYINT NOT NULL,
  `image_path` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`user_id`, `position_id`),
  INDEX `position_id_idx` (`position_id` ASC),
  CONSTRAINT `position_id`
    FOREIGN KEY (`position_id`)
    REFERENCES `NetflixDB`.`POSITION` (`position_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`USER_LANGUAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`USER_LANGUAGE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`USER_LANGUAGE` (
  `user_id` INT NOT NULL,
  `language_id` INT NOT NULL,
  `user_lang_id` VARCHAR(45) NOT NULL,
  INDEX `language_id_idx` (`language_id` ASC),
  PRIMARY KEY (`user_lang_id`),
  CONSTRAINT `language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `NetflixDB`.`LANGUAGE` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `NetflixDB`.`ACCOUNT` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`REPORT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`REPORT` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`REPORT` (
  `report_id` INT NOT NULL,
  `report_ref` VARCHAR(150) NOT NULL,
  `creation_date` DATE NOT NULL,
  PRIMARY KEY (`report_id`),
  CONSTRAINT `report_id`
    FOREIGN KEY (`report_id`)
    REFERENCES `NetflixDB`.`ACCOUNT` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`SKILLSET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`SKILLSET` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`SKILLSET` (
  `skillset_id` INT NOT NULL,
  `skillset_desc` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`skillset_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`USER_SKILLSET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`USER_SKILLSET` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`USER_SKILLSET` (
  `user_id` INT NOT NULL,
  `skillset_id` INT NOT NULL,
  `user_skill_id` INT NOT NULL,
  INDEX `fk_USER_SKILLSET_USER1_idx` (`user_id` ASC),
  INDEX `fk_USER_SKILLSET_SKILLSET1_idx` (`skillset_id` ASC),
  PRIMARY KEY (`user_skill_id`),
  CONSTRAINT `fk_USER_SKILLSET_USER1`
    FOREIGN KEY (`user_id`)
    REFERENCES `NetflixDB`.`ACCOUNT` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_SKILLSET_SKILLSET1`
    FOREIGN KEY (`skillset_id`)
    REFERENCES `NetflixDB`.`SKILLSET` (`skillset_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`MESSAGE_GROUP`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`MESSAGE_GROUP` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`MESSAGE_GROUP` (
  `message_group_id` INT NOT NULL,
  `chatlog_ref` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`message_group_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`USER_MESSAGE_GROUP`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`USER_MESSAGE_GROUP` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`USER_MESSAGE_GROUP` (
  `message_group_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `user_message_id` INT NOT NULL,
  INDEX `fk_USER_MESSAGE_GROUP_MESSAGE_GROUP1_idx` (`message_group_id` ASC),
  INDEX `fk_USER_MESSAGE_GROUP_USER1_idx` (`user_id` ASC),
  PRIMARY KEY (`user_message_id`),
  CONSTRAINT `fk_USER_MESSAGE_GROUP_MESSAGE_GROUP1`
    FOREIGN KEY (`message_group_id`)
    REFERENCES `NetflixDB`.`MESSAGE_GROUP` (`message_group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_MESSAGE_GROUP_USER1`
    FOREIGN KEY (`user_id`)
    REFERENCES `NetflixDB`.`ACCOUNT` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`TITLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`TITLE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`TITLE` (
  `title_id` INT NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NOT NULL,
  `is_active` TINYINT NOT NULL,
  `priority` TINYINT NOT NULL,
  `design_info` VARCHAR(1000) NOT NULL,
  PRIMARY KEY (`title_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`USER_TITLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`USER_TITLE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`USER_TITLE` (
  `user_id` INT NOT NULL,
  `title_id` INT NOT NULL,
  `user_title_id` VARCHAR(45) NOT NULL,
  INDEX `fk_USER_TITLE_USER1_idx` (`user_id` ASC),
  INDEX `fk_USER_TITLE_TITLE1_idx` (`title_id` ASC),
  PRIMARY KEY (`user_title_id`),
  CONSTRAINT `fk_USER_TITLE_USER1`
    FOREIGN KEY (`user_id`)
    REFERENCES `NetflixDB`.`ACCOUNT` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_TITLE_TITLE1`
    FOREIGN KEY (`title_id`)
    REFERENCES `NetflixDB`.`TITLE` (`title_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`ARTWORK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`ARTWORK` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`ARTWORK` (
  `artwork_id` INT NOT NULL,
  `title_id` INT NOT NULL,
  `artwork_name` VARCHAR(100) NOT NULL,
  `artwork_ref` VARCHAR(100) NOT NULL,
  `rating` INT NOT NULL,
  PRIMARY KEY (`artwork_id`),
  INDEX `title_id_idx` (`title_id` ASC),
  CONSTRAINT `title_id`
    FOREIGN KEY (`title_id`)
    REFERENCES `NetflixDB`.`TITLE` (`title_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`STYLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`STYLE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`STYLE` (
  `style_id` INT NOT NULL,
  `style_desc` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`style_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`ARTWORK_STYLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`ARTWORK_STYLE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`ARTWORK_STYLE` (
  `style_id` INT NOT NULL,
  `artwork_id` INT NOT NULL,
  `artwork_style_id` INT NOT NULL,
  INDEX `fk_ARTWORK_STYLE_STYLE1_idx` (`style_id` ASC),
  INDEX `fk_ARTWORK_STYLE_ARTWORK1_idx` (`artwork_id` ASC),
  PRIMARY KEY (`artwork_style_id`),
  CONSTRAINT `fk_ARTWORK_STYLE_STYLE1`
    FOREIGN KEY (`style_id`)
    REFERENCES `NetflixDB`.`STYLE` (`style_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ARTWORK_STYLE_ARTWORK1`
    FOREIGN KEY (`artwork_id`)
    REFERENCES `NetflixDB`.`ARTWORK` (`artwork_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`FEEDBACK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`FEEDBACK` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`FEEDBACK` (
  `feedback_id` INT NOT NULL,
  `artwork_id` INT NOT NULL,
  `feedback_desc` VARCHAR(500) NOT NULL,
  `feedback_date` DATE NULL,
  `isread_date` DATE NOT NULL,
  `isread` TINYINT NULL,
  PRIMARY KEY (`feedback_id`),
  INDEX `fk_FEEDBACK_ARTWORK1_idx` (`artwork_id` ASC),
  CONSTRAINT `fk_FEEDBACK_ARTWORK1`
    FOREIGN KEY (`artwork_id`)
    REFERENCES `NetflixDB`.`ARTWORK` (`artwork_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`GENRE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`GENRE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`GENRE` (
  `genre_id` INT NOT NULL,
  `genre_desc` VARCHAR(75) NOT NULL,
  PRIMARY KEY (`genre_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`TITLE_GENRE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`TITLE_GENRE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`TITLE_GENRE` (
  `genre_id` INT NOT NULL,
  `title_id` INT NOT NULL,
  `title_genre_id` INT NOT NULL,
  INDEX `fk_TITLE_GENRE_GENRE1_idx` (`genre_id` ASC),
  INDEX `fk_TITLE_GENRE_TITLE1_idx` (`title_id` ASC),
  PRIMARY KEY (`title_genre_id`),
  CONSTRAINT `fk_TITLE_GENRE_GENRE1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `NetflixDB`.`GENRE` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TITLE_GENRE_TITLE1`
    FOREIGN KEY (`title_id`)
    REFERENCES `NetflixDB`.`TITLE` (`title_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`ASSET_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`ASSET_TYPE` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`ASSET_TYPE` (
  `type_id` INT NOT NULL,
  `type_desc` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`ASSET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`ASSET` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`ASSET` (
  `type_id` INT NOT NULL,
  `title_id` INT NOT NULL,
  `asset_id` INT NOT NULL,
  `type_ref` VARCHAR(45) NOT NULL,
  INDEX `fk_ASSET_ASSET_TYPE1_idx` (`type_id` ASC),
  INDEX `fk_ASSET_TITLE1_idx` (`title_id` ASC),
  PRIMARY KEY (`asset_id`),
  CONSTRAINT `fk_ASSET_ASSET_TYPE1`
    FOREIGN KEY (`type_id`)
    REFERENCES `NetflixDB`.`ASSET_TYPE` (`type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASSET_TITLE1`
    FOREIGN KEY (`title_id`)
    REFERENCES `NetflixDB`.`TITLE` (`title_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`BACKUP`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`BACKUP` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`BACKUP` (
  `backup_id` INT NOT NULL,
  `backup_ref` VARCHAR(100) NOT NULL,
  `backup_date` DATE NOT NULL,
  PRIMARY KEY (`backup_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`ROUND_ARTWORK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`ROUND_ARTWORK` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`ROUND_ARTWORK` (
  `round_id` INT NOT NULL,
  `round_number` INT NOT NULL,
  `round_description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`round_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetflixDB`.`ROUND`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NetflixDB`.`ROUND` ;

CREATE TABLE IF NOT EXISTS `NetflixDB`.`ROUND` (
  `round_id` INT NOT NULL,
  `artwork_id` INT NOT NULL,
  `art_round_id` INT NOT NULL,
  INDEX `fk_ROUND_ROUND1_idx` (`round_id` ASC),
  INDEX `fk_ROUND_ARTWORK1_idx` (`artwork_id` ASC),
  PRIMARY KEY (`art_round_id`),
  CONSTRAINT `fk_ROUND_ROUND1`
    FOREIGN KEY (`round_id`)
    REFERENCES `NetflixDB`.`ROUND_ARTWORK` (`round_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ROUND_ARTWORK1`
    FOREIGN KEY (`artwork_id`)
    REFERENCES `NetflixDB`.`ARTWORK` (`artwork_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
